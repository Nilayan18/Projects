// MainActivity.kt

import android.Manifest
import android.content.Intent
import android.content.pm.PackageManager
import android.os.Bundle
import android.provider.MediaStore
import android.widget.ArrayAdapter
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import kotlinx.android.synthetic.main.activity_main.*
import java.text.SimpleDateFormat
import java.util.*

class MainActivity : AppCompatActivity() {

    private val CAMERA_REQUEST_CODE = 101
    private val cameraPermission = Manifest.permission.CAMERA
    private val locationPermission = Manifest.permission.ACCESS_FINE_LOCATION

    private val requestCameraPermission =
        registerForActivityResult(ActivityResultContracts.RequestPermission()) { isGranted ->
            if (isGranted) {
                openCamera()
            } else {
                // Handle permission denial
            }
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val genderOptions = arrayOf("Male", "Female", "Other")
        val adapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, genderOptions)
        genderSpinner.adapter = adapter

        requestPermissions()

        submitButton.setOnClickListener {
            if (validateFields()) {
                saveData()
            } else {
                // Display error message
            }
        }
    }

    private fun requestPermissions() {
        if (ContextCompat.checkSelfPermission(
                this,
                cameraPermission
            ) == PackageManager.PERMISSION_GRANTED
        ) {
            openCamera()
        } else {
            requestCameraPermission.launch(cameraPermission)
        }

        // Request location permission and other necessary permissions
        // Handle permissions for other features as needed
    }

    private fun openCamera() {
        val cameraIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)
        startActivityForResult(cameraIntent, CAMERA_REQUEST_CODE)
    }

    private fun validateFields(): Boolean {
        // Implement field validations
        return true
    }

    private fun saveData() {
        // Implement logic to save data locally
    }
}
// Screen 2
// DisplayDataActivity.kt

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import kotlinx.android.synthetic.main.activity_display_data.*
import java.text.SimpleDateFormat
import java.util.*

class DisplayDataActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_display_data)

        displayData()
        fetchAndDisplayWeather()
    }

    private fun displayData() {
        // Retrieve data from storage and populate the UI
    }

    private fun fetchAndDisplayWeather() {
        // Implement logic to fetch current temperature and city from an open-source API
        // Update the UI with the fetched information
    }
}
//activity_main.xml (Screen 1: Collect Farmer Data)
<!-- res/layout/activity_main.xml -->

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/farmerNameEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Farmer Name"
        android:inputType="text"
        android:layout_marginBottom="16dp"/>

    <EditText
        android:id="@+id/addressEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Address"
        android:inputType="textMultiLine"
        android:layout_marginBottom="16dp"/>

    <DatePicker
        android:id="@+id/dobDatePicker"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"/>

    <Spinner
        android:id="@+id/genderSpinner"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:entries="@array/gender_options" />

    <EditText
        android:id="@+id/landAreaEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Farm Land Area (in Acres)"
        android:inputType="numberDecimal"
        android:layout_marginBottom="16dp"/>

    <Button
        android:id="@+id/submitButton"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Submit"/>
</LinearLayout>


//activity_display_data.xml (Screen 2: Display Farmer Data)
<!-- res/layout/activity_display_data.xml -->

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <!-- Add RecyclerView or another layout for displaying data in a table/grid -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/farmerRecyclerView"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:clipToPadding="false"
        android:paddingTop="8dp"
        android:paddingBottom="8dp"/>

    <!-- Add space for displaying current temperature and city -->
    <TextView
        android:id="@+id/weatherInfoTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Current Temperature: 30Â°C\nCurrent City: Chennai"
        android:layout_marginTop="16dp"/>
</LinearLayout>



